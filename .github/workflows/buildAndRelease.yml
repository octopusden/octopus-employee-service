name: BUILD AND RELEASE

on:
  repository_dispatch:
    types: [ release ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Prod
    steps:
    - uses: actions/checkout@v3
      name: Checkout(switching to commit)
      with:
        ref: ${{ github.event.client_payload.commit }}
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: 'gradle'
    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1
    - uses: actions-ecosystem/action-regex-match@v2
      id: version
      name: Prepare a version from a tag
      with:
        text: ${{ github.event.client_payload.build_version }}
        regex: '^v([0-9]+\.[0-9]+\.[0-9]+)$'
        flags: gm
    - name: Check version format
      if: ${{ steps.version.outputs.group1 == '' }}
      run: |
        echo "Version must to match format 'v([0-9]+\.[0-9]+\.[0-9]+)$' but has value ${{ github.event.client_payload.build_version }}"
        exit 1
    - name: GitHub Tag Name
      run: |
        echo "Current version: ${{ steps.version.outputs.group1 }}"
    - name: Build with Gradle
      run: ./gradlew build dockerBuildImage -x test -Ppublishing.docker.registry=ghcr.io/octopusden -Pdocker.registry=docker.io -Pversion=${{ steps.version.outputs.group1 }} --info
      env:
        BUILD_VERSION: ${{ steps.version.outputs.group1 }}
    - name: Publish
      run: ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository -Pversion=${{ steps.version.outputs.group1 }}
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_PRIVATE_KEY }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSPHRASE }}
        BUILD_VERSION: ${{ steps.version.outputs.group1 }}
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Push to docker registry
      run: docker push ghcr.io/octopusden/employee-service-staging:${{ steps.version.outputs.group1 }}
    - name: Create Release
      uses: marvinpinto/action-automatic-releases@master
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        prerelease: false
        automatic_release_tag: ${{ github.event.client_payload.build_version }}
